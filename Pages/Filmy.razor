@page "/filmy"
@using kinoUI.Models
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="filmy-page">
    <div class="filter-container">

    </div>
    <div class="content-container">
        @if (filmy != null)
        {
            @foreach (var film in filmy)
            {
                <div class="film-box">
                    <div class="film-img" @onclick=@(() =>NavigationManager.NavigateTo("filmy/" + @film.Id))>
                        <img src="@film.ImageUrl">
                    </div>
                    <div class="film-info">
                        <div class="film-title" @onclick=@(() =>NavigationManager.NavigateTo("filmy/" + @film.Id))>
                            @film.Title
                            @if (film.OriginalTitle != film.Title)
                            {
                                <div class="film-og-title">
                                    @film.OriginalTitle
                                </div>
                            }
                        </div>
                        <div class="film-info-bot">
                            <div class="film-genre">
                                <div class="film-genre-display">
                                    @film.FilmGenre
                                </div>
                            </div>
                            <div class="film-release-date">
                                @film.ReleaseYear
                            </div>
                            
                        </div>

                    </div>
                    <div class="film-rating">
                        <div class="film-rate-img">
                            <img src="/img/star.png" width="50rem"/>
                        </div>
                        <div class="filmy-rate">
                            @if(filmyRating != null)
                            {
                                rate = 0;
                                int i = 0;
                                @foreach (FilmRating rating in filmyRating)
                                {
                                    @if(rating.FilmId == film.Id)
                                    {
                                        rate += Convert.ToDouble(rating.Rate);
                                        i++;
                                    }
                                }
                                @if (i > 0)
                                {
                                    
                                rate = rate / Convert.ToDouble(i);
                                }
                            }
                            @Math.Round(Convert.ToDouble(rate), 2) / 5
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    double rate = 0;

    List<FilmRating> filmyRating = new();
    List<Film> filmy = new();
    protected override async Task OnInitializedAsync()
    {
        filmy = await HttpClient.GetFromJsonAsync<List<Film>>(NavigationManager.BaseUri + "filmy");
        filmyRating = await HttpClient.GetFromJsonAsync<List<FilmRating>>(NavigationManager.BaseUri + "filmyRating");
    }
}