@using Microsoft.AspNetCore.Components.Web
@inherits LayoutComponentBase
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Mvc.RazorPages
@using kinoUI.Models
@using kinoUI.Data
@using kinoUI.Controllers
@inject UserController UserController

<div id="app">
    <FixedElement Selector=".top-bar">
        <div class="top-bar">
            <div class="logo">
                <a href="">
                    <img src="img/camera.png" />
                </a>

                <a href="" class="logo_text">
                    Kinogród
                </a>
            </div>

            <div class="links">
                <a href="filmy" class="nav-tab">
                    <!-- href odpowiada za przekierowanie do podstrony
            np. localhost:5000/filmy !-->
                    <div>
                        Filmy
                    </div>
                </a>

                <a href="gatunki" class="nav-tab">
                    <div>
                        Gatunki
                    </div>
                </a>

                <a href="top-filmy" class="nav-tab">
                    <div>
                        Top filmy
                    </div>
                </a>
            </div>
            <div class="searchField">
                <form>
                    <input />
                    <button>
                        Szukaj
                    </button>
                </form>
            </div>
            <div class="accountButtons">
                <button @onclick="userInterface.show_login_window">
                    Zaloguj się
                </button>
                <button @onclick="userInterface.show_register_window">
                    Zarejestruj się
                </button>
            </div>


            @if (userInterface.check_visibility("register"))
            {
                <div class="loginWindowContainer">
                    <div class="loginBorder">
                        <div class="loginContent">
                            <h3 class="loginTitle">Rejestracja</h3>
                            <form>
                                <div class="loginInputs">
                                    <input placeholder="E-mail" id="register_email"/>
                                </div>
                                <div class="loginInputs">
                                    <input placeholder="Nazwa Użytkownika" id="register_login" />
                                </div>
                                <div class="loginInputs">
                                    <input placeholder="Hasło" id="register_password" />
                                </div>
                                <div class="loginInputs">
                                    <input placeholder="Powtórz hasło" id="register_password2" />
                                </div>
                                <div class="loginButtons">
                                    <button @onclick="AddUser">Zarejestruj</button>
                                </div>
                                <div class="loginButtons">
                                    <button @onclick="userInterface.close_register_window">Zaloguj</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }

            @if (userInterface.check_visibility("login"))
            {
            <div class="loginWindowContainer">
                <div class="loginBorder">
                    <div class="loginContent">
                        <h3 class="loginTitle">Logowanie</h3>
                        <div class="loginInputs">
                            <input type="text" placeholder="Nazwa Użytkownika" />
                        </div>
                        <div class="loginInputs">
                                <input type="password" placeholder="Hasło" />
                            </div>                     
                        <div class="loginButtons">
                            <button @onclick="userInterface.close_login_window">Zaloguj</button>
                        </div>
                        <div class="loginButtons">
                                <button @onclick="userInterface.close_login_window">Zarejestruj</button>
                        </div>
                    </div>
                </div>
            </div>
            }

            <!-- Tu będzie EditForm do szukania filmów!-->
        </div>
    </FixedElement>


    <div class="content">
        @Body
    </div>

    <footer>
        &copy; Kinogród @DateTime.UtcNow.Year
    </footer>
</div>

@code {
    private string? SearchString;

    public class UserInterface
    {
        bool login_window_visible;
        bool register_window_visible;

        public UserInterface()
        {
            login_window_visible = false;
            register_window_visible = false;
        }

        public void show_register_window()
        {
            register_window_visible = true;
        }

        public void show_login_window()
        {
            login_window_visible = true;
        }

        public void close_register_window()
        {
            register_window_visible = false;
            userMenager.register();
        }

        public void close_login_window()
        {
            login_window_visible = false;
        }

        public bool check_visibility(string selected_window)
        {
            switch(selected_window)
            {
                case "register":
                    return register_window_visible;

                case "login":
                    return login_window_visible;

                default:
                    throw new ArgumentException("Invalid type.");
            }       
        }
    }

    public class UserMenager
    {
        public void register() //uploading users data to database
        {

        }

        public void login() //checking if users credentials are in database
        {

        }
    }


    private void Search()
    {
        
    }

    UserInterface userInterface = new UserInterface();
    static UserMenager userMenager = new UserMenager();   

    // Dlaczego to nie dziala????

    private async Task AddUser()
    {
        User newUser = new User
            {
                UserName = "test",
                Email = "test",
                Password = "test"
            };

        await UserController.AddUserAsync(newUser);
    }
}